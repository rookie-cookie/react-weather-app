{"version":3,"sources":["components/WeatherIcon.js","components/WeatherConvert.js","components/WeatherInfo.js","components/Loader.js","components/WeatherCard.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherIcon","icon","weatherIcons","size","color","Convert","temperature","className","onClick","tempc","Math","floor","document","querySelector","innerHTML","tempf","WeatherInfo","city","humidity","windspeed","weatherdesc","moment","format","Loader","class","WeatherCard","useState","latitude","setLat","longitude","setLong","setTemperature","setCity","setHumidity","setWindspeed","setWeatherdesc","setIcon","loading","setLoading","useEffect","setTimeout","navigator","geolocation","getCurrentPosition","position","coords","axios","get","process","then","res","data","main","temp","name","wind","speed","weather","description","console","log","catch","err","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6VAsBe,SAASA,EAAT,GAA8B,IAARC,EAAO,EAAPA,KAE/BC,EAAe,KAwCnB,MAtCa,QAATD,EACFC,EAAe,cAAC,IAAD,CAAYC,KAAM,IAAKC,MAAM,SAC1B,QAATH,EACTC,EAAe,cAAC,IAAD,CAAcC,KAAM,IAAKC,MAAM,SAC5B,QAATH,EACTC,EAAe,cAAC,IAAD,CAAaC,KAAM,IAAKC,MAAM,SAC3B,QAATH,EACTC,EAAe,cAAC,IAAD,CAAsBC,KAAM,IAAKC,MAAM,SACpC,QAATH,EACTC,EAAe,cAAC,IAAD,CAAUC,KAAM,IAAKC,MAAM,SACxB,QAATH,EACTC,EAAe,cAAC,IAAD,CAAeC,KAAM,IAAKC,MAAM,SAC5B,QAATH,EACVC,EAAe,cAAC,IAAD,CAAUC,KAAM,IAAKC,MAAM,SACxB,QAATH,EACTC,EAAe,cAAC,IAAD,CAAYC,KAAM,IAAKC,MAAM,SAC1B,QAATH,EACTC,EAAe,cAAC,IAAD,CAAcC,KAAM,IAAKC,MAAM,SAC5B,QAATH,EACTC,EAAe,cAAC,IAAD,CAAmBC,KAAM,IAAKC,MAAM,SACjC,QAATH,EACTC,EAAe,cAAC,IAAD,CAAWC,KAAM,IAAKC,MAAM,SACzB,QAATH,EACTC,EAAe,cAAC,IAAD,CAAgBC,KAAM,IAAKC,MAAM,SAC9B,QAATH,EACTC,EAAe,cAAC,IAAD,CAAmBC,KAAM,IAAKC,MAAM,SACjC,QAATH,EACTC,EAAe,cAAC,IAAD,CAAwBC,KAAM,IAAKC,MAAM,SACtC,QAATH,EACTC,EAAe,cAAC,IAAD,CAAWC,KAAM,IAAKC,MAAM,SACzB,QAATH,EACTC,EAAe,cAAC,IAAD,CAAaC,KAAM,IAAKC,MAAM,UAC3B,QAATH,GAES,QAATA,KADTC,EAAe,cAAC,IAAD,CAASC,KAAM,IAAKC,MAAM,UAMzC,8BACGF,IChEQ,SAASG,EAAT,GAAgC,IAAdC,EAAa,EAAbA,YAY/B,OACE,gCACE,qBAAKC,UAAU,mBAAmBC,QAZtC,WACE,IAAIC,EAAQC,KAAKC,MAA2B,OAApBL,EAAc,KACtCM,SAASC,cAAc,gBAAgBC,UAAvC,UAAsDL,EAAtD,WAUE,eACA,qBAAKF,UAAU,mBAAmBC,QARtC,WACE,IAAIO,EAAQL,KAAKC,MAAML,GACvBM,SAASC,cAAc,gBAAgBC,UAAvC,UAAsDC,EAAtD,WAME,kBCTS,SAASC,EAAT,GAOT,IANJV,EAMG,EANHA,YACAW,EAKG,EALHA,KACAC,EAIG,EAJHA,SACAC,EAGG,EAHHA,UACAC,EAEG,EAFHA,YACAnB,EACG,EADHA,KAKA,OACE,sBAAKM,UAAU,wBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,oBAAf,SACG,cAACP,EAAD,CAAaC,KAAMA,MAEtB,sBAAKM,UAAU,QAAf,UACE,mBAAGA,UAAU,kBAAb,SAAgCU,IAChC,oBAAGV,UAAU,cAAb,UAA4Bc,MAASC,OAAO,QAA5C,KAAuDD,MAASC,OAAO,MAAvE,OACA,oBAAGf,UAAU,cAAb,UAA4Ba,EAA5B,MAA4CC,MAASC,OAAO,mBAIhE,sBAAKf,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,cAAf,UAA8BG,KAAKC,MAAML,GAAzC,aAEF,qBAAKC,UAAU,QAAf,SACE,cAAC,EAAD,CAAgBD,YAAaA,SAIlC,qBAAKC,UAAU,MAAf,SACE,oBAAGA,UAAU,kBAAb,uBAA0CW,EAA1C,UAEF,qBAAKX,UAAU,MAAf,SACG,oBAAGA,UAAU,cAAb,wBAAuCY,EAAvC,e,MC1CO,SAASI,IAEtB,OAEE,8BACE,sBAAKC,MAAM,WAAX,UAAsB,wBAAW,wBAAW,wBAAW,6B,qBCC9C,SAASC,IAErB,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAsCJ,mBAAS,MAA/C,mBAAOpB,EAAP,KAAoByB,EAApB,KACA,EAAwBL,mBAAS,IAAjC,mBAAOT,EAAP,KAAae,EAAb,KACA,EAAgCN,mBAAS,MAAzC,mBAAOR,EAAP,KAAiBe,EAAjB,KACA,EAAkCP,mBAAS,MAA3C,mBAAOP,EAAP,KAAkBe,EAAlB,KACA,EAAsCR,mBAAS,MAA/C,mBAAON,EAAP,KAAoBe,EAApB,KACA,EAAwBT,mBAAS,IAAjC,mBAAOzB,EAAP,KAAamC,EAAb,KACA,EAA8BV,oBAAS,GAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KA6BD,OA1BAC,qBAAU,WAERC,YAAW,kBAAMF,GAAW,KAAQ,KAEpCG,UAAUC,YAAYC,oBAAmB,SAAUC,GACjDhB,EAAOgB,EAASC,OAAOlB,UACvBG,EAAQc,EAASC,OAAOhB,cAG1BiB,IAAMC,IAAN,UAAaC,0CAAb,yBAA2DrB,EAA3D,gBAA2EE,EAA3E,iCAA6GmB,qCAC1GC,MAAK,SAACC,GACLnB,EAAemB,EAAIC,KAAKC,KAAKC,MAC7BrB,EAAQkB,EAAIC,KAAKG,MACjBrB,EAAYiB,EAAIC,KAAKC,KAAKlC,UAC1BgB,EAAagB,EAAIC,KAAKI,KAAKC,OAC3BrB,EAAee,EAAIC,KAAKM,QAAQ,GAAGC,aACnCtB,EAAQc,EAAIC,KAAKM,QAAQ,GAAGxD,MAC5B0D,QAAQC,IAAIV,MACXW,OAAM,SAAAC,GACPH,QAAQC,IAAI,QAASE,QAGxB,CAACnC,EAAUE,IAMZ,sBAAKtB,UAAU,UAAf,UAEI,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,wDAA0B,cAAC,IAAD,UAGf,IAAZ8B,EACC,cAACrB,EAAD,CACAW,SAAUA,EACVE,UAAWA,EACXvB,YAAaA,EACbW,KAAMA,EACNC,SAAUA,EACVC,UAAWA,EACXC,YAAaA,EACbnB,KAAMA,IAIR,cAACsB,EAAD,OAKF,qBAAKhB,UAAU,aAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,0DCjEGwD,MATf,WACE,OACE,qBAAKxD,UAAU,MAAf,SACE,cAACkB,EAAD,OCMSuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9D,SAAS+D,eAAe,SAG1BX,M","file":"static/js/main.289eb42f.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  WiDaySunny,\n  WiNightClear,\n  WiDayCloudy,\n  WiNightAltCloudyHigh,\n  WiCloudy,\n  WiNightCloudy,\n  WiDayFog,\n  WiNightFog,\n  WiDayRainMix,\n  WiNightAltRainMix,\n  WiDayRain,\n  WiNightAltRain,\n  WiDayThunderstorm, \n  WiNightAltStormShowers,\n  WiDaySnow,\n  WiNightSnow,\n  WiWindy\n} from 'weather-icons-react'\n\n\nexport default function WeatherIcon({icon}) {\n\n  let weatherIcons = null;\n\n  if (icon === '01d') {\n    weatherIcons = <WiDaySunny size={100} color='#555' />\n  } else if (icon === '01n') {\n    weatherIcons = <WiNightClear size={100} color='#555' />\n  } else if (icon === '02d') {\n    weatherIcons = <WiDayCloudy size={100} color='#555' />\n  } else if (icon === '02n') {\n    weatherIcons = <WiNightAltCloudyHigh size={100} color='#555' />\n  } else if (icon === '03d'){\n    weatherIcons = <WiCloudy size={100} color='#555' />\n  } else if (icon === '03n'){\n    weatherIcons = <WiNightCloudy size={100} color='#555' />\n  }  else if (icon === '04d'){\n    weatherIcons = <WiDayFog size={100} color='#555' />\n  } else if (icon === '04n'){\n    weatherIcons = <WiNightFog size={100} color='#555' />\n  } else if (icon === '09d') {\n    weatherIcons = <WiDayRainMix size={100} color='#555' />\n  } else if (icon === '09n') {\n    weatherIcons = <WiNightAltRainMix size={100} color='#555' />\n  } else if (icon === '10d') {\n    weatherIcons = <WiDayRain size={100} color='#555' />\n  } else if (icon === '10n') {\n    weatherIcons = <WiNightAltRain size={100} color='#555' />\n  } else if (icon === '11d') {\n    weatherIcons = <WiDayThunderstorm size={100} color='#555' />\n  } else if (icon === '11n') {\n    weatherIcons = <WiNightAltStormShowers size={100} color='#555' />\n  } else if (icon === '13d') {\n    weatherIcons = <WiDaySnow size={100} color='#555' />\n  } else if (icon === '13n') {\n    weatherIcons = <WiNightSnow size={100} color='#555' />\n  } else if (icon === '50d') {\n    weatherIcons = <WiWindy size={100} color='#555' />\n  } else if (icon === '50n') {\n    weatherIcons = <WiWindy size={100} color='#555' />\n  }\n  \n  return (\n    <div>\n      {weatherIcons}\n    </div>\n  )   \n}","import React from 'react'\n\nexport default function Convert({temperature}){\n  \n  function convertC(){\n    let tempc = Math.floor((temperature - 32) * 0.5556);\n    document.querySelector('.displaytemp').innerHTML = `${tempc}&deg;C`;\n  }\n\n  function convertF() {\n    let tempf = Math.floor(temperature);\n    document.querySelector('.displaytemp').innerHTML = `${tempf}&deg;F`;\n  }\n\n  return (\n    <div>\n      <div className=\"buttons convertC\" onClick={convertC}>C</div>\n      <div className=\"buttons convertF\" onClick={convertF}>F</div>\n    </div>\n  )\n}","import React from 'react'\nimport './weatherinfo.css'\nimport moment from 'moment'\nimport WeatherIcon from './WeatherIcon'\nimport WeatherConvert from './WeatherConvert'\n\n\n\nexport default function WeatherInfo({\n  temperature,\n  city, \n  humidity,\n  windspeed,\n  weatherdesc,\n  icon\n  }) {\n\n\n\n  return (\n    <div className=\"weatherinfo-container\">\n      <div className=\"row desc\">\n        <div className=\"col-3 displayicon\">\n           <WeatherIcon icon={icon} />\n        </div>\n        <div className=\"col-9\">\n          <p className=\"displaylocation\">{city}</p>\n          <p className=\"displaydate\">{moment().format('dddd')}, {moment().format('LL')} </p>\n          <p className=\"displaydesc\">{weatherdesc} - {moment().format('h:mm a')}</p>\n        </div>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-10\">\n          <div className=\"displaytemp\">{Math.floor(temperature)}&deg;F</div>\n        </div>\n        <div className=\"col-2\">\n          <WeatherConvert temperature={temperature}/>\n        </div>\n      </div>\n      \n     <div className=\"row\">\n       <p className=\"displayhumidity\">humidity: {humidity} %</p> \n     </div>\n     <div className=\"row\">\n        <p className=\"displaywind\">windspeed: {windspeed} m/s</p>\n     </div>\n\n    </div>\n  )\n\n}","import React from 'react'\nimport './loader.css'\n\nexport default function Loader(){\n\n  return (\n\n    <div>\n      <div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './weathercard.css'\nimport { FaMapMarkerAlt } from 'react-icons/fa'\nimport WeatherInfo from './WeatherInfo'\nimport Loader from './Loader'\nimport axios from 'axios'\nimport { useEffect, useState } from \"react\"\n\n\nexport default function WeatherCard(){\n\n   const [latitude, setLat] = useState([]);\n   const [longitude, setLong] = useState([]);\n   const [temperature, setTemperature] = useState(null);\n   const [city, setCity] = useState('');\n   const [humidity, setHumidity] = useState(null);\n   const [windspeed, setWindspeed] = useState(null);\n   const [weatherdesc, setWeatherdesc] = useState(null);\n   const [icon, setIcon] = useState('');\n   const [loading, setLoading] = useState(true)\n  \n\n  useEffect(() => {\n\n    setTimeout(() => setLoading(false), 6000)\n\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n    });\n\n    axios.get(`${process.env.REACT_APP_API_URL}/weather/?lat=${latitude}&lon=${longitude}&units=imperial&APPID=${process.env.REACT_APP_API_KEY}`)\n      .then((res) => {\n        setTemperature(res.data.main.temp);\n        setCity(res.data.name);\n        setHumidity(res.data.main.humidity)\n        setWindspeed(res.data.wind.speed)\n        setWeatherdesc(res.data.weather[0].description)\n        setIcon(res.data.weather[0].icon)\n        console.log(res)\n      }).catch(err => {\n        console.log(\"error\", err)\n      })\n\n  }, [latitude, longitude])\n\n\n\n  return (\n\n    <div className=\"wrapper\">\n       \n        <div className=\"container weather-body\">\n          <div className=\"weather-header\">\n            <h3>Local Weather Report  <FaMapMarkerAlt /></h3>\n          </div>\n\n          {loading === false ? (\n            <WeatherInfo \n            latitude={latitude}\n            longitude={longitude}\n            temperature={temperature}\n            city={city}\n            humidity={humidity}\n            windspeed={windspeed}\n            weatherdesc={weatherdesc}\n            icon={icon}\n             \n            />\n          ): (\n          <Loader />\n      )}\n          \n            \n        </div>\n        <div className=\"container \">\n          <div className=\"weather-footer\">\n            <p>Made by Jona Reyes</p>\n          </div>\n        </div>\n      </div>\n  )\n}","import './App.css';\nimport WeatherCard from './components/WeatherCard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeatherCard />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}